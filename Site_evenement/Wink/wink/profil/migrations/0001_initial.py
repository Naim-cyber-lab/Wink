# Generated by Django 2.2.24 on 2021-06-27 13:13

import ckeditor.fields
import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import profil.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Winker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('birth', models.DateField(null=True)),
                ('photoProfil', models.ImageField(blank=True, null=True, upload_to='pics')),
                ('sexe', models.CharField(max_length=30, null=True)),
                ('etude', models.CharField(blank=True, max_length=250, null=True)),
                ('bio', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adresse', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=30)),
                ('dateDebut', models.DateField(null=True)),
                ('dateFin', models.DateField(null=True)),
                ('datePublication', models.DateField(default=datetime.date.today)),
                ('adresse', models.CharField(max_length=255, null=True)),
                ('localisation', models.CharField(max_length=255, null=True)),
                ('hastags', models.CharField(max_length=150, null=True)),
                ('ageMinimum', models.IntegerField(default=0)),
                ('ageMaximum', models.IntegerField(default=125)),
                ('accessTous', models.BooleanField(default=True)),
                ('accessFollow', models.BooleanField(default=False)),
                ('accessFollower', models.BooleanField(default=False)),
                ('bioEvent', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('moyenneAge', models.IntegerField(null=True)),
                ('nbFille', models.IntegerField(null=True)),
                ('nbGarcon', models.IntegerField(null=True)),
                ('nbLike', models.IntegerField(default=0)),
                ('nbHaha', models.IntegerField(default=0)),
                ('nbLove', models.IntegerField(default=0)),
                ('nbAngry', models.IntegerField(default=0)),
                ('nbSad', models.IntegerField(default=0)),
                ('nbWow', models.IntegerField(default=0)),
                ('attenteWinker', models.ManyToManyField(blank=True, related_name='attenteEvent', to=settings.AUTH_USER_MODEL)),
                ('creatorWinker', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('participeWinker', models.ManyToManyField(blank=True, related_name='participeEvent', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SignalerArticle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('raisonSignalement', models.CharField(blank=True, max_length=255, null=True)),
                ('eventSignalement', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='profil.Event')),
                ('winkerSignalement', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ReactionEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reaction', models.IntegerField()),
                ('eventReaction', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='profil.Event')),
                ('winkerReaction', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RamenerEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=255)),
                ('fait', models.BooleanField(default=False)),
                ('date', models.DateField(default=datetime.date.today)),
                ('event', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='profil.Event')),
            ],
        ),
        migrations.CreateModel(
            name='PublicChatRoomMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('eventComment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='profil.Event')),
                ('winkerComment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PublicChatRoom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('users', models.ManyToManyField(help_text='users who are connected to the chat', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='NotePlayer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', profil.models.IntegerRangeField()),
                ('winker', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FilesWinker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(null=True, upload_to='')),
                ('winker', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FilesEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(null=True, upload_to='')),
                ('event', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='profil.Event')),
            ],
        ),
    ]
